diff --git a/Doc/README.namelist b/Doc/README.namelist
index 48f70a39..59a5f235 100644
--- a/Doc/README.namelist
+++ b/Doc/README.namelist
@@ -341,6 +341,7 @@
                         !   1 => Explicit moisture (SUBEX; Pal et al 2000)
                         !   2 => Explicit moisture Nogherotto/Tompkins
                         !   3 => Explicit moisture WSM5
+                        !   4 => Explicit moisture WSM7
  iocncpl =          0,  ! Ocean SST from coupled Ocean Model through RegESM
                         !   1 => Coupling activated
  iwavcpl =          0,  ! Ocean roughness from coupled Wave Model through RegESM
diff --git a/Main/microlib/Makefile.am b/Main/microlib/Makefile.am
index 283cb1b7..a1a821b8 100644
--- a/Main/microlib/Makefile.am
+++ b/Main/microlib/Makefile.am
@@ -24,7 +24,7 @@ vpath %.inc $(REGCM_ROOT)/Share:.
 
 noinst_LIBRARIES = libmicro.a
 libmicro_a_SOURCES = mod_micro_nogtom.F90 mod_micro_subex.F90 \
-                     mod_micro_wsm5.F90
+                     mod_micro_wsm5.F90 mod_micro_wsm7.F90
 
 REGCMSRC = $(REGCM_ROOT)/Main
 MPP = $(REGCMSRC)/mpplib
@@ -49,3 +49,4 @@ clean-local:
 mod_micro_nogtom.o : mod_micro_nogtom.F90 mod_realkinds.o mod_dynparam.o mod_mpmessage.o mod_memutil.o mod_regcm_types.o mod_constants.o mod_service.o mod_runparams.o mod_stdio.o
 mod_micro_subex.o : mod_micro_subex.F90 mod_intkinds.o mod_realkinds.o mod_constants.o mod_dynparam.o mod_runparams.o mod_memutil.o mod_mpmessage.o mod_regcm_types.o pfesat.inc pfwsat.inc clwfromt.inc wlh.inc
 mod_micro_wsm5.o : mod_micro_wsm5.F90 mod_intkinds.o mod_realkinds.o mod_constants.o mod_dynparam.o mod_runparams.o mod_memutil.o mod_regcm_types.o pfesat.inc pfqsat.inc
+mod_micro_wsm7.o : mod_micro_wsm7.F90 mod_intkinds.o mod_realkinds.o mod_constants.o mod_dynparam.o mod_runparams.o mod_memutil.o mod_regcm_types.o pfesat.inc pfqsat.inc
diff --git a/Main/microlib/mod_micro_wsm7.F90 b/Main/microlib/mod_micro_wsm7.F90
index 3d4362c7..85dedbbb 100644
--- a/Main/microlib/mod_micro_wsm7.F90
+++ b/Main/microlib/mod_micro_wsm7.F90
@@ -17,14 +17,15 @@
 !
 !::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
 
-module mod_micro_wsm5
+module mod_micro_wsm7
 
   use mod_realkinds
   use mod_intkinds
   use mod_constants
   use mod_dynparam
   use mod_memutil
-  use mod_runparams , only : ichem , dt , iqi , iqc , iqr , iqs , iqv
+  use mod_runparams , only : ichem , dt
+  use mod_runparams , only : iqi , iqc , iqr , iqs , iqv , iqg , iqh
   use mod_runparams , only : rdt
   use mod_regcm_types
 
@@ -91,7 +92,7 @@ module mod_micro_wsm5
           rslopesbmax , rsloper2max ,  rslopes2max , rsloper3max ,  &
           rslopes3max
 
-  public :: allocate_mod_wsm5 , init_wsm5 , wsm5
+  public :: allocate_mod_wsm7 , init_wsm7 , wsm7
 
   integer :: is , ie
 
@@ -116,31 +117,31 @@ module mod_micro_wsm5
 
   contains
 
-  subroutine allocate_mod_wsm5
+  subroutine allocate_mod_wsm7
     implicit none
     is = 1
     ie = ((ici2-ici1) + 1) * ((jci2-jci1) + 1)
-    call getmem2d(t,is,ie,1,kz,'wsm5::t')
-    call getmem2d(qv,is,ie,1,kz,'wsm5::qv')
-    call getmem3d(qci,is,ie,1,kz,1,2,'wsm5::qci')
-    call getmem3d(qrs,is,ie,1,kz,1,2,'wsm5::qrs')
-    !call getmem3d(qs,is,ie,1,kz,1,2,'wsm5::qs')
-    !call getmem3d(rh,is,ie,1,kz,1,2,'wsm5::rh')
-    call getmem2d(qs,is,ie,1,kz,'wsm5::qs')
-    call getmem2d(rh,is,ie,1,kz,'wsm5::rh')
-    call getmem3d(fall,is,ie,1,kz,1,2,'wsm5::fall')
-    call getmem2d(den,is,ie,1,kz,'wsm5::den')
-    call getmem2d(delz,is,ie,1,kz,'wsm5::delz')
-    call getmem2d(p,is,ie,1,kz,'wsm5::p')
-    !call getmem2d(cloud_er,is,ie,1,kz,'wsm5::cloud_er')
-    !call getmem2d(ice_er,is,ie,1,kz,'wsm5::ice_er')
-    !call getmem2d(snow_er,is,ie,1,kz,'wsm5::snow_er')
-    call getmem1d(ptfac,is,ie,'wsm5::ptfac')
-    call getmem1d(rain,is,ie,'wsm5::rain')
-    call getmem1d(snow,is,ie,'wsm5::snow')
-  end subroutine allocate_mod_wsm5
+    call getmem2d(t,is,ie,1,kz,'wsm7::t')
+    call getmem2d(qv,is,ie,1,kz,'wsm7::qv')
+    call getmem3d(qci,is,ie,1,kz,1,2,'wsm7::qci')
+    call getmem3d(qrs,is,ie,1,kz,1,2,'wsm7::qrs')
+    !call getmem3d(qs,is,ie,1,kz,1,2,'wsm7::qs')
+    !call getmem3d(rh,is,ie,1,kz,1,2,'wsm7::rh')
+    call getmem2d(qs,is,ie,1,kz,'wsm7::qs')
+    call getmem2d(rh,is,ie,1,kz,'wsm7::rh')
+    call getmem3d(fall,is,ie,1,kz,1,2,'wsm7::fall')
+    call getmem2d(den,is,ie,1,kz,'wsm7::den')
+    call getmem2d(delz,is,ie,1,kz,'wsm7::delz')
+    call getmem2d(p,is,ie,1,kz,'wsm7::p')
+    !call getmem2d(cloud_er,is,ie,1,kz,'wsm7::cloud_er')
+    !call getmem2d(ice_er,is,ie,1,kz,'wsm7::ice_er')
+    !call getmem2d(snow_er,is,ie,1,kz,'wsm7::snow_er')
+    call getmem1d(ptfac,is,ie,'wsm7::ptfac')
+    call getmem1d(rain,is,ie,'wsm7::rain')
+    call getmem1d(snow,is,ie,'wsm7::snow')
+  end subroutine allocate_mod_wsm7
 
-  subroutine init_wsm5
+  subroutine init_wsm7
     implicit none
     qc0  = fourt*mathpi*rhoh2o*r0**3*xncr/stdrho  ! 0.419e-3 -- .61e-3
     qck1 = 0.104_rkx*egrav*peaut / &
@@ -207,9 +208,9 @@ module mod_micro_wsm5
       end if
     end function rgmma
 
-  end subroutine init_wsm5
+  end subroutine init_wsm7
 
-  subroutine wsm5(mo2mc,mc2mo)
+  subroutine wsm7(mo2mc,mc2mo)
     implicit none
     type(mod_2_micro) , intent(in) :: mo2mc
     type(micro_2_mod) , intent(out) :: mc2mo
@@ -269,7 +270,7 @@ module mod_micro_wsm5
       mc2mo%remrat(:,:,:) = d_zero
     end if
 
-    call wsm52d(dt,is,ie)
+    call wsm72d(dt,is,ie)
 
     do k = 1 , kz
       n = 1
@@ -288,6 +289,8 @@ module mod_micro_wsm5
                   (qrs(n,kk,1)-mo2mc%qxx(j,i,k,iqr))*ptfac(n)
           mc2mo%qxten(j,i,k,iqs) = mc2mo%qxten(j,i,k,iqs) + &
                   (qrs(n,kk,2)-mo2mc%qxx(j,i,k,iqs))*ptfac(n)
+          mc2mo%qxten(j,i,k,iqg) = 1.0_rkx
+          mc2mo%qxten(j,i,k,iqh) = 1.0_rkx
           n = n + 1
         end do
       end do
@@ -358,7 +361,7 @@ module mod_micro_wsm5
 !        qi1d(k) = qci(n,k,2)
 !        qs1d(k) = qrs(n,k,2)
 !      end do
-!      call effectrad_wsm5(t1d, qc1d, qi1d, qs1d, den1d,   &
+!      call effectrad_wsm7(t1d, qc1d, qi1d, qs1d, den1d,   &
 !                          re_qc, re_qi, re_qs)
 !      do k = 1 , kz
 !        cloud_er(n,k) = max(2.51e-6,  min(re_qc(k),  50.e-6))
@@ -366,7 +369,7 @@ module mod_micro_wsm5
 !        snow_er(n,k)  = max(25.e-6,   min(re_qs(k), 999.e-6))
 !      end do
 !    end do
-  end subroutine wsm5
+  end subroutine wsm7
   !
   ! This code is a 5-class mixed ice microphyiscs scheme (WSM5) of the
   ! single-moment microphyiscs (WSMMP). The WSMMP assumes that ice nuclei
@@ -399,7 +402,7 @@ module mod_micro_wsm5
   !             Rutledge, Hobbs (rh83, 1983) J. Atmos. Sci.
   !             Hong and Lim (hl, 2006) J. Korean Meteor. Soc.
   !
-  subroutine wsm52d(delt,ims,ime)
+  subroutine wsm72d(delt,ims,ime)
     implicit none
     real(rkx) , intent(in) :: delt
     integer(ik4) , intent(in) :: ims , ime
@@ -522,7 +525,7 @@ module mod_micro_wsm5
       ! compute the fallout term:
       ! first, vertical terminal velocity for minor loops
       !
-      call slope_wsm5(qrs,den,denfac,t, &
+      call slope_wsm7(qrs,den,denfac,t, &
                       rslope,rslopeb,rslope2,rslope3,work1,ims,ime)
       do k = kz , 1, -1
         do i = ims , ime
@@ -550,7 +553,7 @@ module mod_micro_wsm5
         fall(i,1,1) = delqrs1(i)/delz(i,1)*rdtcld
         fall(i,1,2) = delqrs2(i)/delz(i,1)*rdtcld
       end do
-      call slope_wsm5(qrs,den,denfac,t, &
+      call slope_wsm7(qrs,den,denfac,t, &
                       rslope,rslopeb,rslope2,rslope3,work1,ims,ime)
       do k = kz , 1 , -1
         do i = ims , ime
@@ -681,7 +684,7 @@ module mod_micro_wsm5
       !
       ! update the slope parameters for microphysics computation
       !
-      call slope_wsm5(qrs,den,denfac,t, &
+      call slope_wsm7(qrs,den,denfac,t, &
                       rslope,rslopeb,rslope2,rslope3,work1,ims,ime)
       !
       ! work1:  the thermodynamic term in the denominator associated with
@@ -1116,9 +1119,9 @@ module mod_micro_wsm5
       conden = (max(b,minqq)-c)/(d_one+d*d/(rwat*e)*c/(a*a))
     end function conden
 
-  end subroutine wsm52d
+  end subroutine wsm72d
 
-  subroutine slope_wsm5(qrs,den,denfac,t,rslope,rslopeb,rslope2,rslope3,vt, &
+  subroutine slope_wsm7(qrs,den,denfac,t,rslope,rslopeb,rslope2,rslope3,vt, &
                         ims,ime)
     implicit none
     integer , intent(in) :: ims , ime
@@ -1179,7 +1182,7 @@ module mod_micro_wsm5
       lamdas = sqrt(sqrt(pidn0s*z/(x*y)))
     end function lamdas
 
-  end subroutine slope_wsm5
+  end subroutine slope_wsm7
 
   subroutine slope_rain(qrs,den,denfac,rslope,rslopeb,rslope2,rslope3,vt)
     implicit none
@@ -1525,7 +1528,7 @@ module mod_micro_wsm5
   !  schemes.
   !  Coded and implemented by Soo Ya Bae, KIAPS, January 2015.
   !
-!  subroutine effectrad_wsm5(t,qc,qi,qs,rho,re_qc,re_qi,re_qs)
+!  subroutine effectrad_wsm7(t,qc,qi,qs,rho,re_qc,re_qi,re_qs)
 !    implicit none
 !    real(rkx) , dimension(kz) , intent(in) :: t
 !    real(rkx) , dimension(kz) , intent(in) :: qc
@@ -1600,8 +1603,8 @@ module mod_micro_wsm5
 !        re_qs(k) = max(25.e-6_rkx,min(0.5_rkx*(d_one/lamdas), 999.e-6_rkx))
 !      end do
 !    end if
-!  end subroutine effectrad_wsm5
+!  end subroutine effectrad_wsm7
 
-end module mod_micro_wsm5
+end module mod_micro_wsm7
 
 ! vim: tabstop=8 expandtab shiftwidth=2 softtabstop=2
diff --git a/Main/mod_micro_interface.F90 b/Main/mod_micro_interface.F90
index d68f9289..739f0eb5 100644
--- a/Main/mod_micro_interface.F90
+++ b/Main/mod_micro_interface.F90
@@ -31,6 +31,7 @@ module mod_micro_interface
   use mod_micro_nogtom
   use mod_micro_subex
   use mod_micro_wsm5
+  use mod_micro_wsm7
   use mod_cloud_subex
   use mod_cloud_xuran
 
@@ -109,6 +110,8 @@ module mod_micro_interface
 #endif
     else if ( ipptls == 3 ) then
       call allocate_mod_wsm5
+    else if ( ipptls == 4 ) then
+      call allocate_mod_wsm7
     end if
     call getmem2d(rh0,jci1,jci2,ici1,ici2,'subex:rh0')
     call getmem3d(totc,jci1,jci2,ici1,ici2,1,kz,'subex:totc')
@@ -185,6 +188,8 @@ module mod_micro_interface
         call init_nogtom(mddom%ldmsk)
       case(3)
         call init_wsm5
+      case(4)
+        call init_wsm7
       case default
         return
     end select
@@ -203,6 +208,8 @@ module mod_micro_interface
 #endif
       case (3)
         call wsm5(mo2mc,mc2mo)
+      case (4)
+        call wsm7(mo2mc,mc2mo)
       case default
         return
     end select
diff --git a/Main/mod_output.F90 b/Main/mod_output.F90
index e4b12e2c..382dbb89 100644
--- a/Main/mod_output.F90
+++ b/Main/mod_output.F90
@@ -338,6 +338,28 @@ module mod_output
             end do
           end if
         end if
+        if ( associated(atm_qg_out) ) then
+          if ( idynamic == 3 ) then
+            do k = 1 , kz
+              atm_qg_out(:,:,k) = mo_atm%qx(jci1:jci2,ici1:ici2,k,iqg)
+            end do
+          else
+            do k = 1 , kz
+              atm_qg_out(:,:,k) = atm1%qx(jci1:jci2,ici1:ici2,k,iqg)/ps_out
+            end do
+          end if
+        end if
+        if ( associated(atm_qh_out) ) then
+          if ( idynamic == 3 ) then
+            do k = 1 , kz
+              atm_qh_out(:,:,k) = mo_atm%qx(jci1:jci2,ici1:ici2,k,iqh)
+            end do
+          else
+            do k = 1 , kz
+              atm_qh_out(:,:,k) = atm1%qx(jci1:jci2,ici1:ici2,k,iqh)/ps_out
+            end do
+          end if
+        end if
         if ( associated(atm_rh_out) ) then
           if ( idynamic == 3 ) then
             do k = 1 , kz
diff --git a/Main/mod_params.F90 b/Main/mod_params.F90
index e262309e..5b2ff73b 100644
--- a/Main/mod_params.F90
+++ b/Main/mod_params.F90
@@ -1554,14 +1554,16 @@ module mod_params
       call bcast(rcldiff)
     end if
 
-    if ( ipptls > 1 ) then
+    iqfrst = iqc
+    if ( ipptls < 2 ) then
+      nqx = 2
+      iqlst  = iqc
+    else if ( ipptls < 4 ) then
       nqx = 5
-      iqfrst = iqc
       iqlst  = iqs
     else
-      nqx = 2
-      iqfrst = iqc
-      iqlst  = iqc
+      nqx = 7
+      iqlst  = iqh
     end if
 
     if ( irrtm == 1 ) then
diff --git a/Main/mpplib/mod_ncout.F90 b/Main/mpplib/mod_ncout.F90
index da88c083..d6c96fd2 100644
--- a/Main/mpplib/mod_ncout.F90
+++ b/Main/mpplib/mod_ncout.F90
@@ -58,7 +58,7 @@ module mod_ncout
   integer(ik4) , parameter :: nbase = 6
 
   integer(ik4) , parameter :: natm2dvars = 7 + nbase
-  integer(ik4) , parameter :: natm3dvars = 62
+  integer(ik4) , parameter :: natm3dvars = 64
   integer(ik4) , parameter :: natmvars = natm2dvars+natm3dvars
 
   integer(ik4) , parameter :: nshfvars = 4 + nbase
@@ -191,55 +191,57 @@ module mod_ncout
   integer(ik4) , parameter :: atm_qi           = 11
   integer(ik4) , parameter :: atm_qr           = 12
   integer(ik4) , parameter :: atm_qs           = 13
-  integer(ik4) , parameter :: atm_zf           = 14
-  integer(ik4) , parameter :: atm_zh           = 15
-  integer(ik4) , parameter :: atm_pf           = 16
-  integer(ik4) , parameter :: atm_ph           = 17
-  integer(ik4) , parameter :: atm_q_detr       = 18
-  integer(ik4) , parameter :: atm_rainls       = 19
-  integer(ik4) , parameter :: atm_raincc       = 20
-  integer(ik4) , parameter :: atm_tke          = 21
-  integer(ik4) , parameter :: atm_kth          = 22
-  integer(ik4) , parameter :: atm_kzm          = 23
-  integer(ik4) , parameter :: atm_tten_adh     = 24
-  integer(ik4) , parameter :: atm_tten_adv     = 25
-  integer(ik4) , parameter :: atm_tten_tbl     = 26
-  integer(ik4) , parameter :: atm_tten_dif     = 27
-  integer(ik4) , parameter :: atm_tten_bdy     = 28
-  integer(ik4) , parameter :: atm_tten_con     = 29
-  integer(ik4) , parameter :: atm_tten_adi     = 30
-  integer(ik4) , parameter :: atm_tten_rad     = 31
-  integer(ik4) , parameter :: atm_tten_lsc     = 32
-  integer(ik4) , parameter :: atm_qten_adh     = 33
-  integer(ik4) , parameter :: atm_qten_adv     = 34
-  integer(ik4) , parameter :: atm_qten_tbl     = 35
-  integer(ik4) , parameter :: atm_qten_dif     = 36
-  integer(ik4) , parameter :: atm_qten_bdy     = 37
-  integer(ik4) , parameter :: atm_qten_con     = 38
-  integer(ik4) , parameter :: atm_qten_adi     = 39
-  integer(ik4) , parameter :: atm_qten_rad     = 40
-  integer(ik4) , parameter :: atm_qten_lsc     = 41
-  integer(ik4) , parameter :: atm_stats_supw   = 42
-  integer(ik4) , parameter :: atm_stats_supc   = 43
-  integer(ik4) , parameter :: atm_stats_detw   = 44
-  integer(ik4) , parameter :: atm_stats_detc   = 45
-  integer(ik4) , parameter :: atm_stats_erow   = 46
-  integer(ik4) , parameter :: atm_stats_eroc   = 47
-  integer(ik4) , parameter :: atm_stats_evw    = 48
-  integer(ik4) , parameter :: atm_stats_evc    = 49
-  integer(ik4) , parameter :: atm_stats_con1w  = 50
-  integer(ik4) , parameter :: atm_stats_con1c  = 51
-  integer(ik4) , parameter :: atm_stats_dep    = 52
-  integer(ik4) , parameter :: atm_stats_melt   = 53
-  integer(ik4) , parameter :: atm_stats_frz    = 54
-  integer(ik4) , parameter :: atm_stats_rainev = 55
-  integer(ik4) , parameter :: atm_stats_snowev = 56
-  integer(ik4) , parameter :: atm_stats_autocw = 57
-  integer(ik4) , parameter :: atm_stats_autocc = 58
-  integer(ik4) , parameter :: atm_qcrit        = 59
-  integer(ik4) , parameter :: atm_ccnnum       = 60
-  integer(ik4) , parameter :: atm_qincl        = 61
-  integer(ik4) , parameter :: atm_autoconvr    = 62
+  integer(ik4) , parameter :: atm_qg           = 14
+  integer(ik4) , parameter :: atm_qh           = 15
+  integer(ik4) , parameter :: atm_zf           = 16
+  integer(ik4) , parameter :: atm_zh           = 17
+  integer(ik4) , parameter :: atm_pf           = 18
+  integer(ik4) , parameter :: atm_ph           = 19
+  integer(ik4) , parameter :: atm_q_detr       = 20
+  integer(ik4) , parameter :: atm_rainls       = 21
+  integer(ik4) , parameter :: atm_raincc       = 22
+  integer(ik4) , parameter :: atm_tke          = 23
+  integer(ik4) , parameter :: atm_kth          = 24
+  integer(ik4) , parameter :: atm_kzm          = 25
+  integer(ik4) , parameter :: atm_tten_adh     = 26
+  integer(ik4) , parameter :: atm_tten_adv     = 27
+  integer(ik4) , parameter :: atm_tten_tbl     = 28
+  integer(ik4) , parameter :: atm_tten_dif     = 29
+  integer(ik4) , parameter :: atm_tten_bdy     = 30
+  integer(ik4) , parameter :: atm_tten_con     = 31
+  integer(ik4) , parameter :: atm_tten_adi     = 32
+  integer(ik4) , parameter :: atm_tten_rad     = 33
+  integer(ik4) , parameter :: atm_tten_lsc     = 34
+  integer(ik4) , parameter :: atm_qten_adh     = 35
+  integer(ik4) , parameter :: atm_qten_adv     = 36
+  integer(ik4) , parameter :: atm_qten_tbl     = 37
+  integer(ik4) , parameter :: atm_qten_dif     = 38
+  integer(ik4) , parameter :: atm_qten_bdy     = 39
+  integer(ik4) , parameter :: atm_qten_con     = 40
+  integer(ik4) , parameter :: atm_qten_adi     = 41
+  integer(ik4) , parameter :: atm_qten_rad     = 42
+  integer(ik4) , parameter :: atm_qten_lsc     = 43
+  integer(ik4) , parameter :: atm_stats_supw   = 44
+  integer(ik4) , parameter :: atm_stats_supc   = 45
+  integer(ik4) , parameter :: atm_stats_detw   = 46
+  integer(ik4) , parameter :: atm_stats_detc   = 47
+  integer(ik4) , parameter :: atm_stats_erow   = 48
+  integer(ik4) , parameter :: atm_stats_eroc   = 49
+  integer(ik4) , parameter :: atm_stats_evw    = 50
+  integer(ik4) , parameter :: atm_stats_evc    = 51
+  integer(ik4) , parameter :: atm_stats_con1w  = 52
+  integer(ik4) , parameter :: atm_stats_con1c  = 53
+  integer(ik4) , parameter :: atm_stats_dep    = 54
+  integer(ik4) , parameter :: atm_stats_melt   = 56
+  integer(ik4) , parameter :: atm_stats_frz    = 56
+  integer(ik4) , parameter :: atm_stats_rainev = 57
+  integer(ik4) , parameter :: atm_stats_snowev = 58
+  integer(ik4) , parameter :: atm_stats_autocw = 59
+  integer(ik4) , parameter :: atm_stats_autocc = 60
+  integer(ik4) , parameter :: atm_qcrit        = 61
+  integer(ik4) , parameter :: atm_ccnnum       = 62
+  integer(ik4) , parameter :: atm_qincl        = 63
+  integer(ik4) , parameter :: atm_autoconvr    = 64
 
   integer(ik4) , parameter :: shf_xlon   = 1
   integer(ik4) , parameter :: shf_xlat   = 2
@@ -796,14 +798,32 @@ module mod_ncout
                 'mass_fraction_of_snow_in_air',.true.)
               atm_qs_out => v3dvar_atm(atm_qs)%rval
             end if
+            if ( ipptls > 3 ) then
+              if ( enable_atm3d_vars(atm_qg) ) then
+                call setup_var(v3dvar_atm,atm_qg,vsize,'gra','kg kg-1', &
+                  'Mass Fraction of Graupel', &
+                  'mass_fraction_of_graupel',.true.)
+                atm_qg_out => v3dvar_atm(atm_qg)%rval
+              end if
+              if ( enable_atm3d_vars(atm_qh) ) then
+                call setup_var(v3dvar_atm,atm_qh,vsize,'hail','kg kg-1', &
+                  'Mass Fraction of Hail', &
+                  'mass_fraction_of_hail_in_air',.true.)
+                atm_qh_out => v3dvar_atm(atm_qh)%rval
+              end if
+            end if
           else
             enable_atm3d_vars(atm_qr) = .false.
             enable_atm3d_vars(atm_qs) = .false.
+            enable_atm3d_vars(atm_qg) = .false.
+            enable_atm3d_vars(atm_qh) = .false.
           end if
         else
           enable_atm3d_vars(atm_qi) = .false.
           enable_atm3d_vars(atm_qr) = .false.
           enable_atm3d_vars(atm_qs) = .false.
+          enable_atm3d_vars(atm_qg) = .false.
+          enable_atm3d_vars(atm_qh) = .false.
         end if
         if ( ipptls == 2 ) then
           if ( any(icup == 5) .and. icosp == 1 ) then
diff --git a/Main/mpplib/mod_outvars.F90 b/Main/mpplib/mod_outvars.F90
index e760d296..85ddb141 100644
--- a/Main/mpplib/mod_outvars.F90
+++ b/Main/mpplib/mod_outvars.F90
@@ -53,6 +53,8 @@ module mod_outvars
   real(rkx) , dimension(:,:,:) , pointer :: atm_qr_out => null()
   real(rkx) , dimension(:,:,:) , pointer :: atm_qi_out => null()
   real(rkx) , dimension(:,:,:) , pointer :: atm_qs_out => null()
+  real(rkx) , dimension(:,:,:) , pointer :: atm_qg_out => null()
+  real(rkx) , dimension(:,:,:) , pointer :: atm_qh_out => null()
   real(rkx) , dimension(:,:,:) , pointer :: atm_rh_out => null()
   real(rkx) , dimension(:,:,:) , pointer :: atm_zf_out => null()
   real(rkx) , dimension(:,:,:) , pointer :: atm_zh_out => null()
diff --git a/Main/mpplib/mod_runparams.F90 b/Main/mpplib/mod_runparams.F90
index 4192ec41..1870738a 100644
--- a/Main/mpplib/mod_runparams.F90
+++ b/Main/mpplib/mod_runparams.F90
@@ -43,6 +43,8 @@ module mod_runparams
   integer(ik4) , public , parameter :: iqr = 3
   integer(ik4) , public , parameter :: iqi = 4
   integer(ik4) , public , parameter :: iqs = 5
+  integer(ik4) , public , parameter :: iqg = 6
+  integer(ik4) , public , parameter :: iqh = 7
 
   integer(ik4) , public , parameter :: number_of_prognostic_components = 3
   integer(ik4) , public , parameter :: pc_total      = 1
